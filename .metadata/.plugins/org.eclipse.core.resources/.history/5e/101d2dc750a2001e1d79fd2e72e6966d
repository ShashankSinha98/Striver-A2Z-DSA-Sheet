package codingninjas;

public class LongestSubarrayWithGivenSumKPositives {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int[] a = new int[] {1, 2, 3, 1, 1, 1, 1};
		int k = 3;
		System.out.println(longestSubarrayWithSumK(a, k));

	}
	
	public static int longestSubarrayWithSumK(int []a, long k) {
		int l = 0, r = 0;
		int currSum = a[r];
		int longestSubArrLen = 0;
		int n = a.length;
		
		while(r < n) {
			System.out.println("l: "+l+", r: "+r+", cs: "+currSum);
			while(currSum <= k) {
				if(r+1 < n) {
					currSum += a[++r];
					if(currSum == k) {
						longestSubArrLen = Math.max(longestSubArrLen, r - l + 1);
					}
				} else {
					return longestSubArrLen;
				}
			} 
			
			while(currSum > k && l < r) {
				currSum -= a[l++];
				if(currSum == k) {
					longestSubArrLen = Math.max(longestSubArrLen, r - l + 1);
				}
			}
		}
		
		return longestSubArrLen;
    }

}
